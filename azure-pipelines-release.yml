# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- release

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Npm@1
  displayName: 'npm install'
  inputs:
    command: install
    workingDir: src/main/resources/frontend/SalesManagementSystemFront

- task: Npm@1
  displayName: 'Build Angular'
  inputs:
    command: custom
    customCommand: run build -- --prod
    workingDir: src/main/resources/frontend/SalesManagementSystemFront

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: CmdLine@2
  inputs:
    script: 'npm install -g firebase-tools'
    workingDirectory: '$(Agent.ToolsDirectory)'
  displayName: 'install firebase tools'


- task: CmdLine@2
  inputs:
    script: 'firebase deploy --token "$(FIREBASE_TOKEN)"'
    workingDirectory: 'src/main/resources'
  displayName: 'firebase publish'

- task: DownloadSecureFile@1
  name: authkey
  displayName: 'Download Service Account Key'
  inputs:
    secureFile: 'GoogleServiceAccountKey.json'
    retryCount: '2'

- task: CmdLine@2
  inputs:
    script: |
      gcloud auth activate-service-account --key-file $(authkey.secureFilePath)
      gcloud config set project sms-zpi-2020
      gcloud services enable appengine.googleapis.com
      mvn -DskipTests appengine:deploy
  displayName: 'backend deploy'